{"version":3,"sources":["rellax.min.js"],"names":["root","factory","define","amd","module","exports","Rellax","this","el","options","clamp","num","min","max","self","Object","create","prototype","posY","screenY","posX","screenX","blocks","pause","loop","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","setTimeout","transformProp","testEl","document","createElement","style","transform","vendors","vendor","undefined","speed","center","round","vertical","horizontal","keys","forEach","key","elements","querySelectorAll","length","Error","elems","createBlock","dataPercentage","getAttribute","dataSpeed","dataZindex","pageYOffset","documentElement","scrollTop","body","pageXOffset","scrollLeft","blockTop","getBoundingClientRect","top","blockHeight","clientHeight","offsetHeight","scrollHeight","blockLeft","left","blockWidth","clientWidth","offsetWidth","scrollWidth","percentageY","percentageX","bases","updatePosition","cssText","indexOf","index","trimmedStyle","slice","delimiter","replace","baseX","x","baseY","y","height","width","zindex","setPosition","oldY","oldX","parentNode","result","valueX","valueY","Math","update","animate","i","positions","positionY","positionX","translate","destroy","innerHeight","innerWidth","block","push","addEventListener","init"],"mappings":"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","file":"rellax.min.js","sourcesContent":["\n// ------------------------------------------\n// Rellax.js - v1.0.0\n// Buttery smooth parallax library\n// Copyright (c) 2016 Moe Amaya (@moeamaya)\n// MIT license\n//\n// Thanks to Paraxify.js and Jaime Cabllero\n// for parallax concepts\n// ------------------------------------------\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Rellax = factory();\n  }\n}(this, function () {\n  var Rellax = function(el, options){\n    \"use strict\";\n\n    var self = Object.create(Rellax.prototype);\n\n    var posY = 0; // set it to -1 so the animate function gets called at least once\n    var screenY = 0;\n    var posX = 0;\n    var screenX = 0;\n    var blocks = [];\n    var pause = false;\n\n    // check what requestAnimationFrame to use, and if\n    // it's not supported, use the onscroll event\n    var loop = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback){ setTimeout(callback, 1000 / 60); };\n\n    // check which transform property to use\n    var transformProp = window.transformProp || (function(){\n        var testEl = document.createElement('div');\n        if (testEl.style.transform == null) {\n          var vendors = ['Webkit', 'Moz', 'ms'];\n          for (var vendor in vendors) {\n            if (testEl.style[ vendors[vendor] + 'Transform' ] !== undefined) {\n              return vendors[vendor] + 'Transform';\n            }\n          }\n        }\n        return 'transform';\n      })();\n\n    // limit the given number in the range [min, max]\n    var clamp = function(num, min, max) {\n      return (num <= min) ? min : ((num >= max) ? max : num);\n    };\n\n    // Default Settings\n    self.options = {\n      speed: -2,\n      center: false,\n      round: true,\n      vertical: true,\n      horizontal: false,\n      callback: function() {},\n    };\n\n    // User defined options (might have more in the future)\n    if (options){\n      Object.keys(options).forEach(function(key){\n        self.options[key] = options[key];\n      });\n    }\n\n    // If some clown tries to crank speed, limit them to +-10\n    self.options.speed = clamp(self.options.speed, -10, 10);\n\n    // By default, rellax class\n    if (!el) {\n      el = '.rellax';\n    }\n\n    var elements = document.querySelectorAll(el);\n\n    // Now query selector\n    if (elements.length > 0) {\n      self.elems = elements;\n    }\n\n    // The elements don't exist\n    else {\n      throw new Error(\"The elements you're trying to select don't exist.\");\n    }\n\n\n    // Let's kick this script off\n    // Build array for cached element values\n    // Bind scroll and resize to animate method\n    var init = function() {\n      screenY = window.innerHeight;\n      screenX = window.innerWidth;\n      setPosition();\n\n      // Get and cache initial position of all elements\n      for (var i = 0; i < self.elems.length; i++){\n        var block = createBlock(self.elems[i]);\n        blocks.push(block);\n      }\n\n      window.addEventListener('resize', function(){\n        animate();\n      });\n\n      // Start the loop\n      update();\n\n      // The loop does nothing if the scrollPosition did not change\n      // so call animate to make sure every element has their transforms\n      animate();\n    };\n\n\n    // We want to cache the parallax blocks'\n    // values: base, top, height, speed\n    // el: is dom object, return: el cache values\n    var createBlock = function(el) {\n      var dataPercentage = el.getAttribute( 'data-rellax-percentage' );\n      var dataSpeed = el.getAttribute( 'data-rellax-speed' );\n      var dataZindex = el.getAttribute( 'data-rellax-zindex' ) || 0;\n\n      // initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)\n      // ensures elements are positioned based on HTML layout.\n      //\n      // If the element has the percentage attribute, the posY and posX needs to be\n      // the current scroll position's value, so that the elements are still positioned based on HTML layout\n      var posY = self.options.vertical ? ( dataPercentage || self.options.center ? (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop) : 0 ) : 0;\n      var posX = self.options.horizontal ? ( dataPercentage || self.options.center ? (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft) : 0 ) : 0;\n\n      var blockTop = posY + el.getBoundingClientRect().top;\n      var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;\n\n      var blockLeft = posX + el.getBoundingClientRect().left;\n      var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth;\n\n      // apparently parallax equation everyone uses\n      var percentageY = dataPercentage ? dataPercentage : (posY - blockTop + screenY) / (blockHeight + screenY);\n      var percentageX = dataPercentage ? dataPercentage : (posX - blockLeft + screenX) / (blockWidth + screenX);\n      if(self.options.center){ percentageX = 0.5; percentageY = 0.5; }\n\n      // Optional individual block speed as data attr, otherwise global speed\n      // Check if has percentage attr, and limit speed to 5, else limit it to 10\n      var speed = dataSpeed ? clamp(dataSpeed, -10, 10) : self.options.speed;\n      if (dataPercentage || self.options.center) {\n        speed = clamp(dataSpeed || self.options.speed, -5, 5);\n      }\n\n      var bases = updatePosition(percentageX, percentageY, speed);\n\n      // ~~Store non-translate3d transforms~~\n      // Store inline styles and extract transforms\n      var style = el.style.cssText;\n      var transform = '';\n\n      // Check if there's an inline styled transform\n      if (style.indexOf('transform') >= 0) {\n        // Get the index of the transform\n        var index = style.indexOf('transform');\n\n        // Trim the style to the transform point and get the following semi-colon index\n        var trimmedStyle = style.slice(index);\n        var delimiter = trimmedStyle.indexOf(';');\n\n        // Remove \"transform\" string and save the attribute\n        if (delimiter) {\n          transform = \" \" + trimmedStyle.slice(11, delimiter).replace(/\\s/g,'');\n        } else {\n          transform = \" \" + trimmedStyle.slice(11).replace(/\\s/g,'');\n        }\n      }\n\n      return {\n        baseX: bases.x,\n        baseY: bases.y,\n        top: blockTop,\n        left: blockLeft,\n        height: blockHeight,\n        width: blockWidth,\n        speed: speed,\n        style: style,\n        transform: transform,\n        zindex: dataZindex\n      };\n    };\n\n    // set scroll position (posY, posX)\n    // side effect method is not ideal, but okay for now\n    // returns true if the scroll changed, false if nothing happened\n    var setPosition = function() {\n      var oldY = posY;\n      var oldX = posX;\n\n      if (window.pageYOffset !== undefined) {\n        posY = window.pageYOffset;\n      } else {\n        posY = (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      }\n\n      if (window.pageXOffset !== undefined) {\n        posX = window.pageXOffset;\n      } else {\n        posX = (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n      }\n\n      if (oldY != posY && self.options.vertical) {\n        // scroll changed, return true\n        return true;\n      }\n\n      if (oldX != posX && self.options.horizontal) {\n        // scroll changed, return true\n        return true;\n      }\n\n      // scroll did not change\n      return false;\n    };\n\n\n    // Ahh a pure function, gets new transform value\n    // based on scrollPosition and speed\n    // Allow for decimal pixel values\n    var updatePosition = function(percentageX, percentageY, speed) {\n      var result = {};\n      var valueX = (speed * (100 * (1 - percentageX)));\n      var valueY = (speed * (100 * (1 - percentageY)));\n\n      result.x = self.options.round ? Math.round(valueX) : Math.round(valueX * 100) / 100;\n      result.y = self.options.round ? Math.round(valueY) : Math.round(valueY * 100) / 100;\n\n      return result;\n    };\n\n\n    //\n    var update = function() {\n      if (setPosition() && pause === false) {\n        animate();\n      }\n\n      // loop again\n      loop(update);\n    };\n\n    // Transform3d on parallax element\n    var animate = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        var percentageY = ((posY - blocks[i].top + screenY) / (blocks[i].height + screenY));\n        var percentageX = ((posX - blocks[i].left + screenX) / (blocks[i].width + screenX));\n\n        // Subtracting initialize value, so element stays in same spot as HTML\n        var positions = updatePosition(percentageX, percentageY, blocks[i].speed);// - blocks[i].baseX;\n        var positionY = positions.y - blocks[i].baseY;\n        var positionX = positions.x - blocks[i].baseX;\n\n        var zindex = blocks[i].zindex;\n\n        // Move that element\n        // (Set the new translation and append initial inline transforms.)\n        var translate = 'translate3d(' + (self.options.horizontal ? positionX : '0') + 'px,' + (self.options.vertical ? positionY : '0') + 'px,' + zindex + 'px) ' + blocks[i].transform;\n        self.elems[i].style[transformProp] = translate;\n      }\n      self.options.callback(positions);\n    };\n\n\n    self.destroy = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n      pause = true;\n    };\n\n\n    init();\n    return self;\n  };\n  return Rellax;\n}));\n"]}